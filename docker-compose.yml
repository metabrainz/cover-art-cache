services:
  app:
    build: .
    container_name: cover-art-cache-app
    volumes:
      - ${COVER_ART_CACHE_DIR}:/cache
    depends_on:
      - redis
    ports:
      - "127.0.0.1:8000:8000"
    restart: unless-stopped
    user: "1000:1000"
    environment:
      - COVER_ART_CACHE_MAX_SIZE=${COVER_ART_CACHE_MAX_SIZE}
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ssl-proxy-network
      - cache-network

  redis:
    image: redis:7-alpine
    container_name: cover-art-cache-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ssl-proxy-network
      - cache-network

  cleaner:
    build:
      context: .
      dockerfile: Dockerfile.cleaner
    container_name: cover-art-cache-cleaner
    environment:
      - PYTHONUNBUFFERED=1
      - COVER_ART_CACHE_MAX_SIZE=${COVER_ART_CACHE_MAX_SIZE}
      - COVER_ART_CACHE_CLEANUP_INTERVAL=${COVER_ART_CACHE_CLEANUP_INTERVAL}
    volumes:
      - ${COVER_ART_CACHE_DIR}:/cache
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - cache-network

networks:
  ssl-proxy-network:
    name: nginx-proxy
#    external: true
  cache-network:
    name: cache-network

volumes:
  redis_data:
    driver: local
